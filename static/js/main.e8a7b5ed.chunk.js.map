{"version":3,"sources":["theme.js","slices/index.js","reducers/index.js","store.js","components/Header/index.js","components/MainCard/index.js","components/Main/index.js","components/MenuItem/index.js","containers/MenuPage/index.js","containers/DishesPage/index.js","containers/DessertsPage/index.js","containers/ApperitizersPage/index.js","containers/DrinksPage/index.js","selectors/index.js","containers/AddItemDialog/SidesRadio.js","containers/AddItemDialog/IngredientsChecks.js","containers/AddItemDialog/index.js","components/OrderItem/index.js","containers/OrderPage/index.js","containers/App/index.js","containers/index.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","changeCheck","option","payload","ingredients","map","ingredient","name","checked","item","createSlice","initialState","reducers","addItem","state","removeItem","filter","x","title","dialog","open","show","close","ingredientChange","reducer","store","configureStore","rootReducer","Header","order","children","AppBar","style","flexGrow","Toolbar","to","Typography","variant","MenuCard","description","path","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","color","Container","styled","div","Main","data","options","MainCard","key","MenuItem","price","stars","onClick","maxWidth","height","Rating","value","readOnly","CardActions","Button","MenuPage","dispatch","useDispatch","actions","DishesPage","DessertsPage","ApperitizersPage","DrinksPage","dialogSelector","createSelector","orderSelector","items","total","reduce","p","c","IngredientsRadio","sides","Fragment","RadioGroup","defaultValue","FormControlLabel","control","Radio","label","IngredientsChecks","onChange","FormGroup","Checkbox","template","notification","AddItemDialog","useSelector","enqueueSnackbar","useSnackbar","handleClose","Dialog","onClose","DialogTitle","getTitle","DialogContent","dividers","SidesRadio","DialogActions","accept","cancel","OrderItem","ListItem","ListItemText","OrderPage","List","App","className","fixed","paddingTop","Application","ThemeProvider","maxSnack","autoHideDuration","anchorOrigin","vertical","horizontal","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8a7b5ed.chunk.js","sourcesContent":["import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import { createSlice } from 'redux-starter-kit';\n\nconst checkIngredients = option => {\n  if (!option.ingredients) {\n    return option;\n  }\n  return {\n    ...option,\n    ingredients: option.ingredients.map(ingredient => ({\n      ...ingredient,\n      checked: true,\n    })),\n  };\n};\n\nconst changeCheck = (option, payload) => ({\n  ...option,\n  ingredients: option.ingredients.map(ingredient => {\n    return ingredient.name === payload\n      ? { ...ingredient, checked: !ingredient.checked }\n      : ingredient;\n  }),\n});\n\nexport const item = createSlice({\n  initialState: [],\n  reducers: {\n    addItem: (state, { payload }) => [...state, payload],\n    removeItem: (state, { payload }) => state.filter(x => x.title !== payload),\n  },\n});\n\nexport const dialog = createSlice({\n  initialState: {\n    open: false,\n  },\n  reducers: {\n    show: (state, { payload }) => ({\n      ...state,\n      open: true,\n      option: checkIngredients(payload),\n    }),\n    close: () => ({\n      open: false,\n    }),\n    ingredientChange: (state, { payload }) => ({\n      ...state,\n      option: changeCheck(state.option, payload),\n    }),\n  },\n});\n","import { item, dialog } from '../slices';\n\nexport default {\n  item: item.reducer,\n  dialog: dialog.reducer,\n};\n","import { configureStore } from 'redux-starter-kit';\nimport rootReducer from './reducers';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Toolbar, AppBar, Typography } from '@material-ui/core';\nimport { Link } from '@reach/router';\n\nfunction Header({ title, order, children }) {\n  return (\n    <AppBar style={{ flexGrow: 1 }}>\n      <Toolbar>\n        <Link to=\"/\" style={{ flexGrow: 1 }}>\n          <Typography variant=\"h6\">{title}</Typography>\n        </Link>\n        <Link to=\"/order\">\n          <Typography variant=\"h6\">{order}</Typography>\n        </Link>\n      </Toolbar>\n      {children}\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  order: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from '@reach/router';\n\nfunction MenuCard({ title, description, path }) {\n  return (\n    <Link to={path}>\n      <Card>\n        <CardActionArea>\n          <CardMedia\n            image=\"/static/images/cards/contemplative-reptile.jpg\"\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Link>\n  );\n}\n\nMenuCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default MenuCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport data from '../../data/main';\nimport MainCard from '../MainCard';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction Main() {\n  return (\n    <Container>\n      {data.options.map(option => {\n        return <MainCard key={option.title} {...option} />;\n      })}\n    </Container>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  CardActions,\n  Button,\n} from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\n\nfunction MenuItem({ title, description, price, stars, image, onClick }) {\n  return (\n    <Card style={{ maxWidth: 345 }}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n      </CardContent>\n      <CardMedia\n        style={{ height: 200 }}\n        image={`http://raw.githubusercontent.com/alefherrera/my-order/develop/src/assets/${image}`}\n        title={title}\n      />\n      <CardContent>\n        <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n          {`$ ${price}.00`}\n        </Typography>\n        {stars && <Rating value={stars} readOnly />}\n      </CardContent>\n      <CardActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n          Agregar\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nMenuItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  stars: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default MenuItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { dialog } from '../../slices';\nimport MenuItem from '../../components/MenuItem';\nimport { Card, Typography } from '@material-ui/core';\n\nfunction MenuPage({ title, options }) {\n  const dispatch = useDispatch();\n  return (\n    <Card>\n      <Typography variant=\"h4\">{title}</Typography>\n      {options.map(option => (\n        <MenuItem\n          key={option.title}\n          {...option}\n          onClick={() => {\n            dispatch(dialog.actions.show(option));\n          }}\n        />\n      ))}\n    </Card>\n  );\n}\n\nMenuPage.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default MenuPage;\n","import React from 'react';\nimport data from '../../data/dishes';\nimport MenuPage from '../MenuPage';\n\nfunction DishesPage() {\n  return <MenuPage {...data} />;\n}\n\nexport default DishesPage;\n","import React from 'react';\nimport data from '../../data/desserts';\nimport MenuPage from '../MenuPage';\n\nfunction DessertsPage() {\n  return <MenuPage {...data} />;\n}\n\nexport default DessertsPage;\n","import React from 'react';\nimport data from '../../data/apperitizers';\nimport MenuPage from '../MenuPage';\n\nfunction ApperitizersPage() {\n  return <MenuPage {...data} />;\n}\n\nexport default ApperitizersPage;\n","import React from 'react';\nimport data from '../../data/drinks';\nimport MenuPage from '../MenuPage';\n\nfunction DrinksPage() {\n  return <MenuPage {...data} />;\n}\n\nexport default DrinksPage;\n","import { createSelector } from 'redux-starter-kit';\n\nexport const dialogSelector = createSelector(\n  state => state.dialog,\n  dialog => dialog\n);\n\nexport const orderSelector = createSelector(\n  state => state.item,\n  item => ({\n    items: item,\n    total: item.reduce((p, c) => p + c.price, 0),\n  })\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Typography,\n} from '@material-ui/core';\n\nfunction IngredientsRadio({ title, option }) {\n  if (!option) return null;\n  if (!option.sides) return null;\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">{title}</Typography>\n      <RadioGroup defaultValue={option.sides[0].name}>\n        {option.sides.map(({ name }) => (\n          <FormControlLabel\n            value={name}\n            key={name}\n            control={<Radio />}\n            label={name}\n          />\n        ))}\n      </RadioGroup>\n    </React.Fragment>\n  );\n}\n\nIngredientsRadio.propTypes = {\n  title: PropTypes.string.isRequired,\n  option: PropTypes.any,\n};\n\nexport default IngredientsRadio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormGroup,\n  Checkbox,\n  FormControlLabel,\n  Typography,\n} from '@material-ui/core';\n\nfunction IngredientsChecks({ title, option, onChange }) {\n  if (!option) return null;\n  if (!option.ingredients) return null;\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">{title}</Typography>\n      <FormGroup>\n        {option.ingredients.map(({ name, checked }) => (\n          <FormControlLabel\n            value={name}\n            checked={checked}\n            onChange={() => onChange(name)}\n            key={name}\n            control={<Checkbox />}\n            label={name}\n          />\n        ))}\n      </FormGroup>\n    </React.Fragment>\n  );\n}\n\nIngredientsChecks.propTypes = {\n  title: PropTypes.string.isRequired,\n  option: PropTypes.any,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default IngredientsChecks;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { dialogSelector } from '../../selectors';\nimport { item, dialog } from '../../slices';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n} from '@material-ui/core';\nimport template from 'lodash/template';\nimport SidesRadio from './SidesRadio';\nimport IngredientsChecks from './IngredientsChecks';\nimport data from '../../data/dialog';\n\nconst title = template(data.title);\nconst notification = template(data.notification);\n\nfunction AddItemDialog() {\n  const { open, option } = useSelector(dialogSelector);\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const handleClose = () => dispatch(dialog.actions.close());\n  const addItem = option => dispatch(item.actions.addItem(option));\n  const getTitle = option => (option ? title(option) : '');\n  const ingredientChange = ingredient =>\n    dispatch(dialog.actions.ingredientChange(ingredient));\n\n  if (!open) return null;\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>{getTitle(option)}</DialogTitle>\n      <DialogContent dividers>\n        <SidesRadio title={data.sides} option={option} />\n        <IngredientsChecks\n          title={data.ingredients}\n          option={option}\n          onChange={ingredientChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            addItem(option);\n            handleClose();\n            enqueueSnackbar(notification(option), {\n              variant: 'success',\n            });\n          }}\n        >\n          {data.accept}\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            handleClose();\n          }}\n        >\n          {data.cancel}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default AddItemDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem, ListItemText } from '@material-ui/core';\n\nfunction OrderItem({ item }) {\n  return (\n    <ListItem>\n      <ListItemText primary={item.title} secondary={`$${item.price}`} />\n    </ListItem>\n  );\n}\n\nOrderItem.propTypes = {\n  item: PropTypes.any,\n};\n\nexport default OrderItem;\n","import React from 'react';\nimport { Card, Typography, List, CardContent } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport data from '../../data/order';\nimport { orderSelector } from '../../selectors';\nimport OrderItem from '../../components/OrderItem';\n\nfunction renderItems(items) {\n  if (!items) return null;\n  return items.map(item => <OrderItem key={item.title} item={item} />);\n}\n\nfunction OrderPage() {\n  const order = useSelector(orderSelector);\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h4\">{data.title}</Typography>\n        <List>{renderItems(order.items)}</List>\n        <Typography variant=\"h3\"> {`$${order.total}`}</Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default OrderPage;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport Main from '../../components/Main';\nimport DishesPage from '../DishesPage';\nimport { Router } from '@reach/router';\nimport { Container } from '@material-ui/core';\nimport DessertsPage from '../DessertsPage';\nimport ApperitizersPage from '../ApperitizersPage';\nimport DrinksPage from '../DrinksPage';\nimport AddItemDialog from '../AddItemDialog';\nimport OrderPage from '../OrderPage';\nimport data from '../../data/app';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title={data.title} order={data.order}></Header>\n      <Container fixed style={{ paddingTop: 100 }}>\n        <Router>\n          <Main path=\"/\" />\n          <DishesPage path=\"/dishes\" />\n          <DessertsPage path=\"/desserts\" />\n          <ApperitizersPage path=\"/apperitizers\" />\n          <DrinksPage path=\"/drinks\" />\n          <OrderPage path=\"/order\" />\n        </Router>\n      </Container>\n      <AddItemDialog />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from 'react-redux';\nimport { SnackbarProvider } from 'notistack';\nimport theme from '../theme';\nimport store from '../store';\nimport App from './App';\n\nfunction Application() {\n  return (\n    <React.Fragment>\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <SnackbarProvider\n            maxSnack={3}\n            autoHideDuration={3000}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n          >\n            <CssBaseline />\n            <App />\n          </SnackbarProvider>\n        </ThemeProvider>\n      </Provider>\n    </React.Fragment>\n  );\n}\n\nexport default Application;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Application from \"./containers\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}